{"ast":null,"code":"var _jsxFileName = \"/home/yogesh/FrontendAASF/src/Components/Autoplay_slider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Autoplay_slider.css';\n\n// let image1 = '../Images'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autoplay_slider = () => {\n  _s();\n  const images = ['../Image/image1.jpg', '../Image/image2.jpg', '../Image/image3.jpg', '../Image/image4.jpg', '../Image/image5.jpg', '../Image/image1.jpg', '../Image/image2.jpg', '../Image/image3.jpg'];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Move to the next set of 3 images\n      setCurrentIndex(prevIndex => (prevIndex + 3) % images.length);\n      console.log(images[0]);\n    }, 3000); // Change the interval as needed (in milliseconds)\n\n    return () => clearInterval(interval); // Clear the interval on component unmount\n  }, [currentIndex, images.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: images.slice(currentIndex, currentIndex + 3).map((Images, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[0],\n        alt: `Image ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Autoplay_slider, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = Autoplay_slider;\nexport default Autoplay_slider;\nvar _c;\n$RefreshReg$(_c, \"Autoplay_slider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Autoplay_slider","_s","images","currentIndex","setCurrentIndex","interval","setInterval","prevIndex","length","console","log","clearInterval","className","children","slice","map","Images","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yogesh/FrontendAASF/src/Components/Autoplay_slider.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Autoplay_slider.css'; \n\n// let image1 = '../Images'\n\nconst Autoplay_slider = () => {\n  const images = [\n    '../Image/image1.jpg',\n    '../Image/image2.jpg',\n    '../Image/image3.jpg',\n    '../Image/image4.jpg',\n    '../Image/image5.jpg',\n    '../Image/image1.jpg',\n    '../Image/image2.jpg',\n    '../Image/image3.jpg',\n  ];\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Move to the next set of 3 images\n      setCurrentIndex((prevIndex) => (prevIndex + 3) % images.length);\n      console.log(images[0])\n    }, 3000); // Change the interval as needed (in milliseconds)\n\n    return () => clearInterval(interval); // Clear the interval on component unmount\n  }, [currentIndex, images.length]);\n\n  return (\n    <div className=\"slider-container\">\n      <div className=\"slider\">\n        {images.slice(currentIndex, currentIndex + 3).map((Images, index) => (\n          <img key={index} src={images[0]} alt={`Image ${index}`} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Autoplay_slider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAG,CACb,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,CACtB;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC;MACAF,eAAe,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIL,MAAM,CAACM,MAAM,CAAC;MAC/DC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMS,aAAa,CAACN,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACF,YAAY,EAAED,MAAM,CAACM,MAAM,CAAC,CAAC;EAEjC,oBACET,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bd,OAAA;MAAKa,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBX,MAAM,CAACY,KAAK,CAACX,YAAY,EAAEA,YAAY,GAAG,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9DlB,OAAA;QAAiBmB,GAAG,EAAEhB,MAAM,CAAC,CAAC,CAAE;QAACiB,GAAG,EAAG,SAAQF,KAAM;MAAE,GAA7CA,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAmCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}